// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/User.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace PortalHR.Web {
  public static partial class UserService
  {
    static readonly string __ServiceName = "greet.UserService";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::PortalHR.Web.RegisterRequest> __Marshaller_greet_RegisterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PortalHR.Web.RegisterRequest.Parser));
    static readonly grpc::Marshaller<global::PortalHR.Web.RegisterReply> __Marshaller_greet_RegisterReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PortalHR.Web.RegisterReply.Parser));
    static readonly grpc::Marshaller<global::PortalHR.Web.LoginRequest> __Marshaller_greet_LoginRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PortalHR.Web.LoginRequest.Parser));
    static readonly grpc::Marshaller<global::PortalHR.Web.LoginResponse> __Marshaller_greet_LoginResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PortalHR.Web.LoginResponse.Parser));
    static readonly grpc::Marshaller<global::PortalHR.Web.GetUserRequest> __Marshaller_greet_GetUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PortalHR.Web.GetUserRequest.Parser));
    static readonly grpc::Marshaller<global::PortalHR.Web.GetUserResponse> __Marshaller_greet_GetUserResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PortalHR.Web.GetUserResponse.Parser));
    static readonly grpc::Marshaller<global::PortalHR.Web.EditUserRequest> __Marshaller_greet_EditUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PortalHR.Web.EditUserRequest.Parser));
    static readonly grpc::Marshaller<global::PortalHR.Web.EditUserResponse> __Marshaller_greet_EditUserResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PortalHR.Web.EditUserResponse.Parser));
    static readonly grpc::Marshaller<global::PortalHR.Web.GetAllUsersRequest> __Marshaller_greet_GetAllUsersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PortalHR.Web.GetAllUsersRequest.Parser));
    static readonly grpc::Marshaller<global::PortalHR.Web.GetAllUsersResponse> __Marshaller_greet_GetAllUsersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PortalHR.Web.GetAllUsersResponse.Parser));

    static readonly grpc::Method<global::PortalHR.Web.RegisterRequest, global::PortalHR.Web.RegisterReply> __Method_Register = new grpc::Method<global::PortalHR.Web.RegisterRequest, global::PortalHR.Web.RegisterReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Register",
        __Marshaller_greet_RegisterRequest,
        __Marshaller_greet_RegisterReply);

    static readonly grpc::Method<global::PortalHR.Web.LoginRequest, global::PortalHR.Web.LoginResponse> __Method_Login = new grpc::Method<global::PortalHR.Web.LoginRequest, global::PortalHR.Web.LoginResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Login",
        __Marshaller_greet_LoginRequest,
        __Marshaller_greet_LoginResponse);

    static readonly grpc::Method<global::PortalHR.Web.GetUserRequest, global::PortalHR.Web.GetUserResponse> __Method_GetUserById = new grpc::Method<global::PortalHR.Web.GetUserRequest, global::PortalHR.Web.GetUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUserById",
        __Marshaller_greet_GetUserRequest,
        __Marshaller_greet_GetUserResponse);

    static readonly grpc::Method<global::PortalHR.Web.EditUserRequest, global::PortalHR.Web.EditUserResponse> __Method_EditUser = new grpc::Method<global::PortalHR.Web.EditUserRequest, global::PortalHR.Web.EditUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "EditUser",
        __Marshaller_greet_EditUserRequest,
        __Marshaller_greet_EditUserResponse);

    static readonly grpc::Method<global::PortalHR.Web.GetAllUsersRequest, global::PortalHR.Web.GetAllUsersResponse> __Method_GetAllUsers = new grpc::Method<global::PortalHR.Web.GetAllUsersRequest, global::PortalHR.Web.GetAllUsersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllUsers",
        __Marshaller_greet_GetAllUsersRequest,
        __Marshaller_greet_GetAllUsersResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::PortalHR.Web.UserReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for UserService</summary>
    public partial class UserServiceClient : grpc::ClientBase<UserServiceClient>
    {
      /// <summary>Creates a new client for UserService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public UserServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for UserService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public UserServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected UserServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected UserServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::PortalHR.Web.RegisterReply Register(global::PortalHR.Web.RegisterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Register(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PortalHR.Web.RegisterReply Register(global::PortalHR.Web.RegisterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Register, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PortalHR.Web.RegisterReply> RegisterAsync(global::PortalHR.Web.RegisterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RegisterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PortalHR.Web.RegisterReply> RegisterAsync(global::PortalHR.Web.RegisterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Register, null, options, request);
      }
      public virtual global::PortalHR.Web.LoginResponse Login(global::PortalHR.Web.LoginRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Login(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PortalHR.Web.LoginResponse Login(global::PortalHR.Web.LoginRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Login, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PortalHR.Web.LoginResponse> LoginAsync(global::PortalHR.Web.LoginRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LoginAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PortalHR.Web.LoginResponse> LoginAsync(global::PortalHR.Web.LoginRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Login, null, options, request);
      }
      public virtual global::PortalHR.Web.GetUserResponse GetUserById(global::PortalHR.Web.GetUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PortalHR.Web.GetUserResponse GetUserById(global::PortalHR.Web.GetUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUserById, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PortalHR.Web.GetUserResponse> GetUserByIdAsync(global::PortalHR.Web.GetUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PortalHR.Web.GetUserResponse> GetUserByIdAsync(global::PortalHR.Web.GetUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUserById, null, options, request);
      }
      public virtual global::PortalHR.Web.EditUserResponse EditUser(global::PortalHR.Web.EditUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EditUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PortalHR.Web.EditUserResponse EditUser(global::PortalHR.Web.EditUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_EditUser, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PortalHR.Web.EditUserResponse> EditUserAsync(global::PortalHR.Web.EditUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EditUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PortalHR.Web.EditUserResponse> EditUserAsync(global::PortalHR.Web.EditUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_EditUser, null, options, request);
      }
      public virtual global::PortalHR.Web.GetAllUsersResponse GetAllUsers(global::PortalHR.Web.GetAllUsersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllUsers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PortalHR.Web.GetAllUsersResponse GetAllUsers(global::PortalHR.Web.GetAllUsersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllUsers, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PortalHR.Web.GetAllUsersResponse> GetAllUsersAsync(global::PortalHR.Web.GetAllUsersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllUsersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PortalHR.Web.GetAllUsersResponse> GetAllUsersAsync(global::PortalHR.Web.GetAllUsersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllUsers, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override UserServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new UserServiceClient(configuration);
      }
    }

  }
}
#endregion
